user root;

worker_processes 1;
events {
    worker_connections 512;
}

# 输出等级大于等于error的日志
error_log logs/error.log error; 

http {
    lua_package_path "$prefix/lib/?.lua;$prefix/service/?.lua;;" ;
    lua_package_cpath "$prefix/service/lib/?.so;;";

    # init_by_lua_file service/init/init.lua;
    # init_worker_by_lua_file service/init/init_worker.lua;

    # lua_use_default_type on;
    # lua_malloc_trim 1000;
    # lua_need_request_body off;
    # lua_http10_buffering on;

    # rewrite_by_lua_no_postpone off;
    # access_by_lua_no_postpone off;
    # lua_transform_underscores_in_response_headers on;
    # lua_check_client_abort off;
    client_body_buffer_size 1k;

    server {
        listen 82;
        server_name *.*;
        access_log  logs/access.log ;
        lua_code_cache off;

        # ssl_certificate_by_lua_file service/ssl/ssl_certificate.lua;


        location / {
            set $age 25;
            set $phone '';
            set $new_var '';
            set_by_lua $name "return 'luruoyang'";
            set_by_lua_block $test_var {return tonumber(ngx.var.request_length)*2}  
            set_by_lua_file $addr service/http/set.lua;
            
            # rewrite_by_lua
            # access_by_lua
            # content_by_lua
            # header_filter_by_lua
            # body_filter_by_lua
            # log_by_lua
            rewrite_by_lua_file service/http/rewrite.lua;
            content_by_lua_file service/http/http.lua;
            header_filter_by_lua_file  service/http/header-filter.lua;


        }
        location /new_req_uri {
            content_by_lua "ngx.say('/new_req_uri')";
        }
    }
}
# init_by_lua 
# init_worker_by_lua 

# ssl_certificate_by_lua
# set_by_lua

# rewrite_by_lua
# access_by_lua
# content_by_lua
# balancer_by_lua
# header_filter_by_lua
# body_filter_by_lua
# log_by_lua

# 以下指令有三种形式：xxx_by_lua_[block/file]
# init_worker_by_lua
# rewrite_by_lua
# access_by_lua 
# content_by_lua
# body_filter_by_lua 
# log_by_lua

# openresty -p `pwd` -c "`pwd`/conf/nginx.conf" -s signal